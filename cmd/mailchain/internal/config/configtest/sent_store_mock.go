// Code generated by MockGen. DO NOT EDIT.
// Source: sent_store.go

// Package configtest is a generated GoMock package.
package configtest

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSentStoreSetter is a mock of SentStoreSetter interface
type MockSentStoreSetter struct {
	ctrl     *gomock.Controller
	recorder *MockSentStoreSetterMockRecorder
}

// MockSentStoreSetterMockRecorder is the mock recorder for MockSentStoreSetter
type MockSentStoreSetterMockRecorder struct {
	mock *MockSentStoreSetter
}

// NewMockSentStoreSetter creates a new mock instance
func NewMockSentStoreSetter(ctrl *gomock.Controller) *MockSentStoreSetter {
	mock := &MockSentStoreSetter{ctrl: ctrl}
	mock.recorder = &MockSentStoreSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSentStoreSetter) EXPECT() *MockSentStoreSetterMockRecorder {
	return m.recorder
}

// Set mocks base method
func (m *MockSentStoreSetter) Set(sentType string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", sentType)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (mr *MockSentStoreSetterMockRecorder) Set(sentType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockSentStoreSetter)(nil).Set), sentType)
}
